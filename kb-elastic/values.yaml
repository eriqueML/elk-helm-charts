################################### IMAGE properties ####################################

image:
  repository: "192.168.234.47/kb-poc-elastic"
  tag: "1.4"
  pullPolicy: IfNotPresent

############################### Elastic common env vars #################################

networkHost: 0.0.0.0
clusterName: elasticsearch
esJavaOpts: "-Xmx1g -Xms1g"
esPathConf: config

############################## Master nodes configuration ###############################

master:
  name: elasticsearch-master
  replicaCount: 3
  heapSize: 1024m
  updateStrategy: RollingUpdate
  podManagementPolicy: "Parallel"
  service:
    name: elasticsearch-master
    type: ClusterIP
    httpPortName: http
    transportPortName: transport
    httpPort: 9200
    transportPort: 9300
    nodePort: null
  serviceAccount:
    create: false
    name: ""
  securityContext:
    enabled: true
    privileged: true
    fsGroup: 1000
    runAsUser: 1000
  resources:
    limits: {}
    # cpu: 100m
    # memory: 2176Mi
    requests:
      cpu: 1024m
      memory: 1024Mi
  livenessProbe:
    enabled: true
    initialDelaySeconds: 90
    periodSeconds: 30
    timeoutSeconds: 5
    successThreshold: 1
    failureThreshold: 5
    httpGet: 
      path: /_cluster/health?local=true
      port: 9200
      scheme: HTTPS
  readinessProbe:
    enabled: true
    initialDelaySeconds: 30
    periodSeconds: 10
    timeoutSeconds: 5
    successThreshold: 3
    failureThreshold: 3
    httpGet:
      path: /_cluster/health?local=true
      port: 9200
      scheme: HTTPS
   
################################ Data nodes configuration ##############################

data:
  name: elasticsearch-data
  enabled: true
  replicaCount: 1
  heapSize: 1024m
  updateStrategy: RollingUpdate
  podManagementPolicy: "Parallel"
  service:
    name: elasticsearch-data
    type: ClusterIP
    httpPortName: http
    transportPortName: transport
    httpPort: 9200
    transportPort: 9300
    nodePort: null
  serviceAccount:
    create: false
    name: ""
  securityContext:
    enabled: true
    fsGroup: 1000
    runAsUser: 1000
  resources:
    limits: {}
    # cpu: 100m
    # memory: 2176Mi
    requests:
      cpu: 512m
      memory: 1024Mi
  livenessProbe:
    enabled: true
    initialDelaySeconds: 90
    periodSeconds: 30
    timeoutSeconds: 5
    successThreshold: 1
    failureThreshold: 5
    httpGet:
      path: /_cluster/health?local=true
      port: 9200
      scheme: HTTPS
  readinessProbe:
    enabled: true
    initialDelaySeconds: 30
    periodSeconds: 10
    timeoutSeconds: 5
    successThreshold: 3
    failureThreshold: 3
    httpGet:
      path: /_cluster/health?local=true
      port: 9200
      scheme: HTTPS
      
############################### Ingest nodes configuration #############################

ingest:
  name: elasticsearch-ingest
  enabled: true
  replicaCount: 1
  heapSize: 256m
  updateStrategy: RollingUpdate
  podManagementPolicy: "Parallel"
  securityContext:
    enabled: true
    fsGroup: 1000
    runAsUser: 1000
  service:
    name: elasticsearch-ingest
    type: ClusterIP
    httpPortName: http
    transportPortName: transport
    httpPort: 9200
    transportPort: 9300
    nodePort: null
  serviceAccount:
    create: false
    name: ""
  resources:
    limits: {}
    # cpu: 100m
    # memory: 384Mi
    requests:
      cpu: 256m
      memory: 256Mi
  livenessProbe:
    enabled: true
    initialDelaySeconds: 90
    periodSeconds: 30
    timeoutSeconds: 5
    successThreshold: 1
    failureThreshold: 5
    httpGet:
      path: /_cluster/health?local=true
      port: 9200
      scheme: HTTPS
  readinessProbe:
    enabled: true
    initialDelaySeconds: 30
    periodSeconds: 10
    timeoutSeconds: 5
    successThreshold: 3
    failureThreshold: 3
    httpGet:
      path: /_cluster/health?local=true
      port: 9200
      scheme: HTTPS    

################################# PV and PVC variables #################################

persistentVolume:
  created: true
  name: elasticsearch-volume
  capacity: 20Gi
  type: local
  accessModes: ReadWriteOnce
  ReclaimPolicy: Delete
  hostPath:
    path: /mnt/kb-poc-share/kb-elastic
  
persistentVolumeClaim:
  created: true
  name: elasticsearch-pvc
  accessModes: ReadWriteOnce
  storage: 5Gi

volumeClaimTemplates:
  name: pvc
  accessModes: ReadWriteOnce
  resources:
    storage: 2Gi
    mountPath: /mnt/kb-poc-share/kb-elastic/

volumeMounts:
  pv: 
    mountPath: /usr/share/elasticsearch/data

################################## INGRESS variables #####################################

ingress:
  enabled: false
  annotations:
    kubernetes.io/ingress.class: nginx
  #  kubernetes.io/tls-acme: "true"
  hosts:
    - host: elastic.kb.dev.com
      paths:
        backend:
        serviceName: elasticsearch-master
        servicePort: 9200
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - elastic.kb.dev.com

################################### Security variables ###################################

podSecurityContext: {}
  # fsGroup: 2000

tlsSecrets:
  enabled: false
